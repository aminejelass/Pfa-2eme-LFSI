/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projet_pfa;
import java.awt.Color;
import java.sql.*;
import java.text.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author amine
 */
public class formation extends javax.swing.JFrame {
  Connect x = new Connect();
  Connect y = new Connect();
   Statement st; 
   Statement sa;
    /**
     * Creates new form formation
     */
    public formation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        label1 = new java.awt.Label();
        idf = new java.awt.TextField();
        lib = new java.awt.TextField();
        dd = new java.awt.TextField();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label5 = new java.awt.Label();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabformation = new javax.swing.JTable();
        bajouter = new java.awt.Button();
        jSeparator1 = new javax.swing.JSeparator();
        supp = new java.awt.Button();
        jButton1 = new javax.swing.JButton();
        sh = new java.awt.TextField();
        modifier = new java.awt.Button();
        refraiche = new java.awt.Button();
        button1 = new java.awt.Button();
        jLabel1 = new javax.swing.JLabel();
        pp = new java.awt.TextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabs = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label1.setText("Gestion des Formations");

        idf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                idfFocusLost(evt);
            }
        });
        idf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idfActionPerformed(evt);
            }
        });
        idf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idfKeyPressed(evt);
            }
        });

        lib.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libActionPerformed(evt);
            }
        });

        dd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddActionPerformed(evt);
            }
        });

        label2.setText("ID formation");

        label3.setText("ID_session");

        label5.setText("lib formation");

        tabformation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID formation", "lib formation", "date d√©but", "date fin"
            }
        ));
        tabformation.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabformationAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tabformation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tabformationFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tabformationFocusLost(evt);
            }
        });
        tabformation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabformationMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabformation);

        bajouter.setLabel("ajouter");
        bajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bajouterActionPerformed(evt);
            }
        });

        supp.setLabel("supprimer");
        supp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppActionPerformed(evt);
            }
        });

        jButton1.setText("recherher");
        jButton1.setActionCommand("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        sh.setText("search...");

        modifier.setLabel("modifier");
        modifier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modifierMouseClicked(evt);
            }
        });
        modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierActionPerformed(evt);
            }
        });

        refraiche.setLabel("refraiche");
        refraiche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refraicheActionPerformed(evt);
            }
        });

        button1.setLabel("retour");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Prix");

        pp.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        tabs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabs.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabsAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tabs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabs);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(648, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)
                                .addComponent(dd, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(68, 68, 68)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pp, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(idf, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                        .addComponent(lib, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(113, 113, 113)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(468, 468, 468)
                        .addComponent(refraiche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bajouter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(modifier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(supp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(sh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(3, 3, 3)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lib, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(pp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(supp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(modifier, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bajouter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(refraiche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(201, Short.MAX_VALUE))))
        );

        label2.getAccessibleContext().setAccessibleName("IDForatio");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void idfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idfActionPerformed
        // TODO add your handling code here:
        if (idf.getText().length()>3) 
        {idf.setBackground(Color.RED);
        JOptionPane.showMessageDialog(null,"id doit etre >8");
        }
    }//GEN-LAST:event_idfActionPerformed

    private void libActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_libActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_libActionPerformed

    private void ddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddActionPerformed
   int verif()
    { 
        String ch = idf.getText()  ;
        if (ch == null) {
            return 1;
      
    }
    try {
        double d = Double.parseDouble(ch);
    } catch (NumberFormatException nfe) {
        return 1;
    }
    
      
   
  
    
    
    return 0;
                   
    }
    private void bajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bajouterActionPerformed
     int x = verif();
        if (0== x)
     { String req = "INSERT INTO formation VALUES ('"+idf.getText()+"','"+lib.getText()+"','"+dd.getText()+"', '"+pp.getText()+"')";
        System.out.print(req);
        try{
          st=Connect.getcon().createStatement();
          st.executeQuery(req);
          JOptionPane.showMessageDialog(null,"ajout√© avec succ√©s");
        }
        catch(SQLException e )
            
        {System.out.println("");
            System.out.println(e);}
        
       String re = "select * from formation";
     ResultSet rst;
        System.out.print(req);
        try{
          st=Connect.getcon().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE );
        rst =  st.executeQuery(re);
     tabformation.setModel(DbUtils.resultSetToTableModel(rst));
          
        }
        catch(SQLException e )
            
        {System.out.println("");
            System.out.println(e);}}
        else if (x == 1 )
     {
         JOptionPane.showMessageDialog(null,"id doit etre numerique et < 8 ");
                
     }
        
        
    }//GEN-LAST:event_bajouterActionPerformed

    private void tabformationAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabformationAncestorAdded
     String req = "select * from formation";
     ResultSet rs;
        System.out.print(req);
        try{
          st=Connect.getcon().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE );
        rs =  st.executeQuery(req);
     tabformation.setModel(DbUtils.resultSetToTableModel(rs));
          
        }
        catch(SQLException e )
            
        {System.out.println("");
            System.out.println(e);}
         
    }//GEN-LAST:event_tabformationAncestorAdded

    private void suppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppActionPerformed
        // TODO add your handling code here:
       int r = tabformation.getSelectedRow();
       String cel = tabformation.getModel().getValueAt(r, 0).toString();
       String reqt ="DELETE FROM formation where IDF = "+cel;
         idf.setText(tabformation.getModel().getValueAt(r, 0).toString()); 
        lib.setText(tabformation.getModel().getValueAt(r, 1).toString()); 
        dd.setText(tabformation.getModel().getValueAt(r, 2).toString());
     
       try { st=Connect.getcon().createStatement();
              st.executeQuery(reqt);
              JOptionPane.showMessageDialog(null,"supprim√© avec succ√©s");
            }
       catch(SQLException e )
       {
            System.out.print(e);
       }
       
       String req = "select * from formation";
     ResultSet rs;
        System.out.print(req);
        try{
          st=Connect.getcon().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE );
        rs =  st.executeQuery(req);
     tabformation.setModel(DbUtils.resultSetToTableModel(rs));
          
        }
        catch(SQLException e )
            
        {System.out.println("");
            System.out.println(e);}

        
    }//GEN-LAST:event_suppActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            String req = "select * from formation where (IDF = "+sh.getText().toString()+")";
     ResultSet rs;
        System.out.print(req);
        try{
          st=Connect.getcon().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE );
        rs =  st.executeQuery(req);
     tabformation.setModel(DbUtils.resultSetToTableModel(rs));
          
        }
        catch(SQLException e )
            
        {System.out.println("");
            System.out.println(e);}
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierActionPerformed
        int r = tabformation.getSelectedRow();
        String c = tabformation.getModel().getValueAt(r, 0).toString();   
       String req = "UPDATE formation set IDF = '"+idf.getText()+"' ,LIB = '"+lib.getText()+"' , ids = '"+dd.getText()+"' ,prix = '"+pp.getText()+ "' Where IDF = "+ c;
        System.out.print(req);
        try{
          st=Connect.getcon().createStatement();
          st.executeQuery(req);
          JOptionPane.showMessageDialog(null,"modifier avec succ√©s");
        }
        catch(SQLException e )
            
        {System.out.println("");
            System.out.println(e);}
        
       String re = "select * from formation";
     ResultSet rst;
        System.out.print(req);
        try{
          st=Connect.getcon().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE );
        rst =  st.executeQuery(re);
     tabformation.setModel(DbUtils.resultSetToTableModel(rst));
          
        }
        catch(SQLException e )
            
        {System.out.println("");
            System.out.println(e);}
// TODO add your handling code here:
    }//GEN-LAST:event_modifierActionPerformed

    private void tabformationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabformationFocusGained
       
        
        // TODO add your handling code here:
    }//GEN-LAST:event_tabformationFocusGained

    private void tabformationFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabformationFocusLost
        // TODO add your handling code here:  int r = tabformation.getSelectedRow();
     
        
    }//GEN-LAST:event_tabformationFocusLost

    private void refraicheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refraicheActionPerformed
        // TODO add your handling code here:
        String req = "select * from formation";
     ResultSet rs;
        System.out.print(req);
        try{
          st=Connect.getcon().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE );
        rs =  st.executeQuery(req);
     tabformation.setModel(DbUtils.resultSetToTableModel(rs));
          
        }
        catch(SQLException e )
            
        {System.out.println("");
            System.out.println(e);}
    }//GEN-LAST:event_refraicheActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // TODO add your handling code here:
        index.s.setVisible(false);
    }//GEN-LAST:event_button1ActionPerformed

    private void tabformationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabformationMouseClicked
        // TODO add your handling code here:
         
        int r = tabformation.getSelectedRow();
        idf.setText(tabformation.getModel().getValueAt(r, 0).toString()); 
        lib.setText(tabformation.getModel().getValueAt(r, 1).toString()); 
        pp.setText(tabformation.getModel().getValueAt(r, 2).toString());
        dd.setText(tabformation.getModel().getValueAt(r, 3).toString());
    }//GEN-LAST:event_tabformationMouseClicked

    private void tabsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabsMouseClicked
        // TODO add your handling code here:
           int r = tabs.getSelectedRow();
        dd.setText(tabs .getModel().getValueAt(r, 0).toString()); 
    }//GEN-LAST:event_tabsMouseClicked

    private void modifierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifierMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_modifierMouseClicked

    private void tabsAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabsAncestorAdded
        // TODO add your handling code here:
         String req = "select * from sesson";
     ResultSet rs;
        System.out.print(req);
        try{
          st=Connect.getcon().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE );
        rs =  st.executeQuery(req);
     tabs.setModel(DbUtils.resultSetToTableModel(rs));
          
        }
        catch(SQLException e )
            
        {System.out.println("");
            System.out.println(e);}
    }//GEN-LAST:event_tabsAncestorAdded

    private void idfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idfKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_idfKeyPressed

    private void idfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idfFocusLost
        // TODO add your handling code here:
        String req = "select * from formation where idf = " + idf.getText() ;
     ResultSet rs;
        System.out.print(req);
        try{
          st=Connect.getcon().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE );
         rs =  st.executeQuery(req);
     
          
        }
        catch(SQLException e )
            
        {System.out.println("");
            System.out.println(e);}
        
       try
       {if (rs.next())
           idf.setText("ce id existe d√©ja ");
           
        }
        catch(SQLException e )
            
        {System.out.println("");
            System.out.println(e);}
        
            
    }//GEN-LAST:event_idfFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button bajouter;
    private java.awt.Button button1;
    private java.awt.TextField dd;
    private java.awt.TextField idf;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label5;
    private java.awt.TextField lib;
    private java.awt.Button modifier;
    private java.awt.TextField pp;
    private java.awt.Button refraiche;
    private java.awt.TextField sh;
    private java.awt.Button supp;
    private javax.swing.JTable tabformation;
    private javax.swing.JTable tabs;
    // End of variables declaration//GEN-END:variables
}
